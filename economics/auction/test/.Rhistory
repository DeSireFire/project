library(foreign)
library(stargazer)
library(ggplot2)
library(foreign)
library(stargazer)
data_clean=function(data,name,col,num){
#  col[which(is.nan(col))] = NA
#  col[which(col==Inf)] = NA
#   data=na.omit(col)
#   quantile(col, c(.05, .5, .95))
#data=data[!(is.na(col)),]
tall=quantile(col, c(1.0-num),na.rm= TRUE)
bottom=quantile(col, c(num),na.rm= TRUE)
data=data[data[name]<tall,]
data=data[data[name]>bottom,]
return(data)
}
sample= read.csv(file=file.path("G:\\Dropbox\\academic\\ideas\\IO field\\justice auction\\code2\\analysis\\", "sample1_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
sample= read.csv(file=file.path("E:\\Dropbox\\academic\\ideas\\IO field\\justice auction\\code2\\analysis\\", "sample1_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
sample2=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
reg_NUM = lm(resev_proxy ~ p_res_eva + num_bidder , data = sample2)
summary(reg_NUM)
reg_pri = lm(resev_proxy ~ p_res_eva + num_bidder+priority_people , data = sample2)
summary(reg_pri)
reg_pri2 = lm(num_bidder ~ p_res_eva +priority_people , data = sample2)
summary(reg_pri2)
library(plm)
View(sample2)
fixed <- plm(resev_proxy ~ p_res_eva+num_bidder+priority_people, data=sample2, index=c("city", "year"), model="within")
summary(fixed)
fixed <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+city , data=sample2)
summary(fixed)
library(foreign)
library(stargazer)
library(plm)
data_clean=function(data,name,col,num){
#  col[which(is.nan(col))] = NA
#  col[which(col==Inf)] = NA
#   data=na.omit(col)
#   quantile(col, c(.05, .5, .95))
#data=data[!(is.na(col)),]
tall=quantile(col, c(1.0-num),na.rm= TRUE)
bottom=quantile(col, c(num),na.rm= TRUE)
data=data[data[name]<tall,]
data=data[data[name]>bottom,]
return(data)
}
reg_pri_city_year <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+city+year , data=sample2)
summary(reg_pri_city_year)
sample= read.csv(file=file.path("E:\\Dropbox\\academic\\ideas\\IO field\\justice auction\\code2\\analysis\\", "sample1_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
sample2=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
reg_pri_city_year <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+city+year , data=sample2)
summary(reg_pri_city_year)
reg_pri_city_year <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample2)
summary(reg_pri_city_year)
reg_pri_bidder = lm(num_bidder ~ p_res_eva +priority_people +factor(city)+factor(year), data = sample2)
summary(reg_pri_bidder)
View(reg_pri_bidder)
remove(reg_pri_bidder)
remove(reg_pri_city_year)
stargazer(reg_pri0,reg_pri1,reg_pri_bidder0,reg_pri_bidder1,type='tex')
reg_pri0 = lm(resev_proxy ~ p_res_eva + num_bidder+priority_people , data = sample2)
summary(reg_pri)
# regress on number of bidders without control city and year
reg_pri_bidder0 = lm(num_bidder ~ p_res_eva +priority_people ), data = sample2)
summary(reg_pri_bidder0)
# regress on price index with control on city and year
reg_pri_bidder1 = lm(num_bidder ~ p_res_eva +priority_people +factor(city)+factor(year), data = sample2)
summary(reg_pri_bidder1)
# regress on number of bidders with control on city and year
reg_pri1 <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample2)
summary(reg_pri1)
stargazer(reg_pri0,reg_pri1,reg_pri_bidder0,reg_pri_bidder1,type='tex')
reg_pri0 = lm(resev_proxy ~ p_res_eva + num_bidder+priority_people , data = sample2)
summary(reg_pri)
reg_pri0 = lm(resev_proxy ~ p_res_eva + num_bidder+priority_people , data = sample2)
summary(reg_pri0)
# regress on number of bidders without control city and year
reg_pri_bidder0 = lm(num_bidder ~ p_res_eva +priority_people ), data = sample2)
summary(reg_pri_bidder0)
# regress on price index with control on city and year
reg_pri_bidder1 = lm(num_bidder ~ p_res_eva +priority_people +factor(city)+factor(year), data = sample2)
summary(reg_pri_bidder1)
# regress on number of bidders with control on city and year
reg_pri1 <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample2)
summary(reg_pri1)
reg_pri_bidder0 = lm(num_bidder ~ p_res_eva +priority_people , data = sample2)
summary(reg_pri_bidder0)
stargazer(reg_pri0,reg_pri1,reg_pri_bidder0,reg_pri_bidder1,type='tex')
stargazer(reg_pri0,reg_pri1,reg_pri_bidder0,reg_pri_bidder1,type='latex')
sample3= read.csv(file=file.path("E:\\Dropbox\\academic\\ideas\\IO field\\justice auction\\code2\\analysis\\", "sample2_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
sample4=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
reg_pri0 = lm(resev_proxy ~ p_res_eva + num_bidder+priority_people , data = sample4)
summary(reg_pri0)
# regress on number of bidders without control city and year
reg_pri_bidder0 = lm(num_bidder ~ p_res_eva +priority_people , data = sample4)
summary(reg_pri_bidder0)
# regress on price index with control on city and year
reg_pri_bidder1 = lm(num_bidder ~ p_res_eva +priority_people +factor(city)+factor(year), data = sample4)
summary(reg_pri_bidder1)
# regress on number of bidders with control on city and year
reg_pri1 <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample4)
summary(reg_pri1)
reg_pri0 = lm(resev_proxy ~ p_res_eva + num_bidder+priority_people , data = sample4)
summary(reg_pri0)
reg_pri_bidder0 = lm(num_bidder ~ p_res_eva +priority_people , data = sample4)
summary(reg_pri_bidder0)
reg_pri_bidder1 = lm(num_bidder ~ p_res_eva +priority_people +factor(city)+factor(year), data = sample4)
summary(reg_pri_bidder1)
reg_pri1 <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample4)
summary(reg_pri1)
stargazer(reg_pri0,reg_pri1,reg_pri_bidder0,reg_pri_bidder1,type='latex')
sample4=data_clean(sample3,'resev_proxy',sample$resev_proxy,0.01)
reg_pri0 = lm(resev_proxy ~ p_res_eva + num_bidder+priority_people , data = sample4)
summary(reg_pri0)
# regress on number of bidders without control city and year
reg_pri_bidder0 = lm(num_bidder ~ p_res_eva +priority_people , data = sample4)
summary(reg_pri_bidder0)
# regress on price index with control on city and year
reg_pri_bidder1 = lm(num_bidder ~ p_res_eva +priority_people +factor(city)+factor(year), data = sample4)
summary(reg_pri_bidder1)
# regress on number of bidders with control on city and year
reg_pri1 <- lm(resev_proxy ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample4)
summary(reg_pri1)
# output the results for resev_proxy
stargazer(reg_pri0,reg_pri1,reg_pri_bidder0,reg_pri_bidder1,type='latex')
library(foreign)
library(stargazer)
library(plm)
sample= read.csv(file=file.path("E:\\Dropbox\\academic\\ideas\\IO field\\justice auction\\code2\\analysis\\", "sample1_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
sample2=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
data_clean=function(data,name,col,num){
#  col[which(is.nan(col))] = NA
#  col[which(col==Inf)] = NA
#   data=na.omit(col)
#   quantile(col, c(.05, .5, .95))
#data=data[!(is.na(col)),]
tall=quantile(col, c(1.0-num),na.rm= TRUE)
bottom=quantile(col, c(num),na.rm= TRUE)
data=data[data[name]<tall,]
data=data[data[name]>bottom,]
return(data)
}
sample2=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
View(sample2)
sample= read.csv(file=file.path("E:\\Dropbox\\academic\\ideas\\IO field\\justice auction\\code2\\analysis\\", "sample1_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
sample2=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
reg_pri_bid0 <- lm(dist_high ~ p_res_eva+num_bidder+priority_people, data=sample2)
summary(reg_pri_bid0)
reg_pri_bid1 <- lm(dist_high ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample2)
summary(reg_pri_bid1)
reg_pri_bid0 <- lm(dist_high ~ p_res_eva+num_bidder+priority_people+resev_proxy, data=sample2)
summary(reg_pri_bid0)
reg_pri_bid0 <- lm(dist_high ~ p_res_eva+num_bidder+priority_people, data=sample2)
summary(reg_pri_bid0)
reg_pri_freq1 <- lm(bid_freq ~ p_res_eva+num_bidder+priority_people, data=sample2)
summary(reg_pri_freq1)
reg_pri_freq0 <- lm(bid_freq ~ p_res_eva+num_bidder+priority_people, data=sample2)
summary(reg_pri_freq0)
library(foreign)
library(stargazer)
sample= read.csv(file=file.path("G:/Dropbox/academic/ideas/IO field/justice auction/code3/analysis", "sample1_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
library(foreign)
library(stargazer)
sample= read.csv(file=file.path("E:/Dropbox/academic/ideas/IO field/justice auction/code3/analysis", "sample1_df.csv"), header=TRUE, sep="\t",encoding = "UTF-8")
sample2=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
data_clean=function(data,name,col,num){
#  col[which(is.nan(col))] = NA
#  col[which(col==Inf)] = NA
#   data=na.omit(col)
#   quantile(col, c(.05, .5, .95))
#data=data[!(is.na(col)),]
tall=quantile(col, c(1.0-num),na.rm= TRUE)
bottom=quantile(col, c(num),na.rm= TRUE)
data=data[data[name]<tall,]
data=data[data[name]>bottom,]
return(data)
}
sample2=data_clean(sample,'resev_proxy',sample$resev_proxy,0.01)
# regress on price index without control on city and year
reg_pri0 = lm(resev_proxy ~  num_bidder+priority_people , data = sample2)
summary(reg_pri0)
# regress on number of bidders without control city and year
reg_pri_bidder0 = lm((num_bidder) ~ p_res_eva +priority_people , data = sample2)
summary(reg_pri_bidder0)
# regress on price index with control on city and year
reg_pri_bidder1 = lm((num_bidder) ~ p_res_eva +priority_people +factor(city)+factor(year), data = sample2)
summary(reg_pri_bidder1)
# regress on number of bidders with control on city and year
reg_pri1 <- lm(resev_proxy ~ num_bidder+priority_people+factor(city)+factor(year) , data=sample2)
summary(reg_pri1)
# regress on bidding spread without control on city and year
reg_pri_bid0 <- lm(dist_high ~ p_res_eva+num_bidder+priority_people, data=sample2)
summary(reg_pri_bid0)
# regress on bidding spread with control on city and year
reg_pri_bid1 <- lm(dist_high ~ p_res_eva+num_bidder+priority_people+factor(city)+factor(year) , data=sample2)
summary(reg_pri_bid1)
# regress on bidding freq without control on city and year
reg_pri_freq0 <- lm(bid_freq ~ p_res_eva+num_bidder+priority_people, data=sample2)
summary(reg_pri_freq0)
# regress on bidding freq with control on city and year
reg_pri_freq1 <- lm(bid_freq ~ p_res_eva+num_bidder+priority_people, data=sample2)
summary(reg_pri_freq1)
# output the results for resev_proxy
stargazer(reg_pri0,reg_pri1,reg_pri_bidder0,reg_pri_bidder1,type='text')
setwd("E:/github/Project/economics/auction/test")
# start the CVM test
for (i in seq(2, 6, by=2)){
sp1= sample_c[sample_c$num_bidder==i,'win_norm']
sp2= sample_c[sample_c$num_bidder==(i+1),'win_norm']
e_sp1=ecdf(sp1)
e_dist_i1=ori_cdf_v(e_sp1(sp1),i)
e_sp2=ecdf(sp2)
e_dist_i2=ori_cdf_v(e_sp2(sp2),i+1)
# normalize to the same support to make comparison
df_sp1=data.frame(sp1,e_dist_i1)
names(df_sp1) = c("x",'ecdf')
df_sp2=data.frame(sp2,e_dist_i2)
names(df_sp2) = c("x",'ecdf')
lower_bound=max(min(df_sp1$x),min(df_sp2$x))
upper_bound=min(max(df_sp1$x),max(df_sp2$x))
df_sp1=df_sp1[df_sp1$x<upper_bound,]
df_sp1=df_sp1[df_sp1$x>lower_bound,]
df_sp2=df_sp2[df_sp2$x<upper_bound,]
df_sp2=df_sp2[df_sp2$x>lower_bound,]
print("----------------------------------")
print(cramer.test(df_sp1$ecdf,df_sp2$ecdf))
print(ks.test(df_sp1$ecdf,df_sp2$ecdf))
print("----------------------------------")
}
library(foreign)
library(stargazer)
library(ggplot2)
library(cramer)
data_clean=function(data){
data=data[data[,'priority_people']==0,]
data[,'win_norm']=data[,'win_bid'] / data[,'reserve_price']
data=data[complete.cases(data[ , 'win_norm']),]
tall=quantile(data$win_norm, c(0.95),na.rm= TRUE)
data=data[data['win_norm']<tall,]
return(data)
}
# function to calculate the parentral distribution
parent_F=function(x,ecdf,n) n*x^(n-1)-(n-1)*x^n -ecdf
ori_cdf = function (ecdf,n){
parent_cdf=uniroot(parent_F,c(0, 1), tol = 0.0001, ecdf = ecdf,n=n)$root
return(parent_cdf)
}
sample= read.csv(file="sample_raw1_df.csv", header=TRUE, sep="\t",encoding = "UTF-8")
ori_cdf_v=Vectorize(ori_cdf)
sample_c = data_clean(sample)
for (i in seq(2, 6, by=2)){
sp1= sample_c[sample_c$num_bidder==i,'win_norm']
sp2= sample_c[sample_c$num_bidder==(i+1),'win_norm']
e_sp1=ecdf(sp1)
e_dist_i1=ori_cdf_v(e_sp1(sp1),i)
e_sp2=ecdf(sp2)
e_dist_i2=ori_cdf_v(e_sp2(sp2),i+1)
# normalize to the same support to make comparison
df_sp1=data.frame(sp1,e_dist_i1)
names(df_sp1) = c("x",'ecdf')
df_sp2=data.frame(sp2,e_dist_i2)
names(df_sp2) = c("x",'ecdf')
lower_bound=max(min(df_sp1$x),min(df_sp2$x))
upper_bound=min(max(df_sp1$x),max(df_sp2$x))
df_sp1=df_sp1[df_sp1$x<upper_bound,]
df_sp1=df_sp1[df_sp1$x>lower_bound,]
df_sp2=df_sp2[df_sp2$x<upper_bound,]
df_sp2=df_sp2[df_sp2$x>lower_bound,]
print("----------------------------------")
print(cramer.test(df_sp1$ecdf,df_sp2$ecdf))
print(ks.test(df_sp1$ecdf,df_sp2$ecdf))
print("----------------------------------")
}
sp1= sample_c[sample_c$num_bidder==2,'win_norm']
sp2= sample_c[sample_c$num_bidder==3,'win_norm']
sp3= sample_c[sample_c$num_bidder==4,'win_norm']
e_dist_1 = ori_cdf_v(ecdf(sp1)(sp1),2)
e_dist_2 = ori_cdf_v(ecdf(sp2)(sp2),4)
e_dist_3 = ori_cdf_v(ecdf(sp3)(sp3),6)
df <- data.frame(x = c(e_dist_1,e_dist_2,e_dist_3), ggg=factor(rep(1:3, c(length(e_dist_1),length(e_dist_2),length(e_dist_3)))))
ggplot(df, aes(x, colour = ggg)) +
stat_ecdf()+
scale_colour_hue(name="", labels=c('N=2','N=4', 'N=6')) +
ylab("ecdf") +
xlab("quantile of winning price / reserve price")+
ggtitle("ECDF Across Different Number of Bidders")
sp1= sample_c[sample_c$num_bidder==2,'win_norm']
sp2= sample_c[sample_c$num_bidder==3,'win_norm']
sp3= sample_c[sample_c$num_bidder==4,'win_norm']
e_dist_1 = ori_cdf_v(ecdf(sp1)(sp1),2)
e_dist_2 = ori_cdf_v(ecdf(sp2)(sp2),4)
e_dist_3 = ori_cdf_v(ecdf(sp3)(sp3),6)
df <- data.frame(x = c(e_dist_1,e_dist_2,e_dist_3), ggg=factor(rep(1:3, c(length(e_dist_1),length(e_dist_2),length(e_dist_3)))))
ggplot(df, aes(x, colour = ggg)) +
stat_ecdf()+
scale_colour_hue(name="", labels=c('N=2','N=3', 'N=4')) +
ylab("ecdf") +
xlab("quantile of winning price / reserve price")+
ggtitle("ECDF Across Different Number of Bidders")
sp1= sample_c[sample_c$num_bidder==2,'win_norm']
sp2= sample_c[sample_c$num_bidder==3,'win_norm']
sp3= sample_c[sample_c$num_bidder==4,'win_norm']
e_dist_1 = ori_cdf_v(ecdf(sp1)(sp1),2)
e_dist_2 = ori_cdf_v(ecdf(sp2)(sp2),3)
e_dist_3 = ori_cdf_v(ecdf(sp3)(sp3),4)
df <- data.frame(x = c(e_dist_1,e_dist_2,e_dist_3), ggg=factor(rep(1:3, c(length(e_dist_1),length(e_dist_2),length(e_dist_3)))))
ggplot(df, aes(x, colour = ggg)) +
stat_ecdf()+
scale_colour_hue(name="", labels=c('N=2','N=3', 'N=4')) +
ylab("ecdf") +
xlab("quantile of winning price / reserve price")+
ggtitle("ECDF Across Different Number of Bidders")
sp1= sample_c[sample_c$num_bidder==4,'win_norm']
sp2= sample_c[sample_c$num_bidder==5,'win_norm']
sp3= sample_c[sample_c$num_bidder==6,'win_norm']
e_dist_1 = ori_cdf_v(ecdf(sp1)(sp1),4)
e_dist_2 = ori_cdf_v(ecdf(sp2)(sp2),5)
e_dist_3 = ori_cdf_v(ecdf(sp3)(sp3),6)
df <- data.frame(x = c(e_dist_1,e_dist_2,e_dist_3), ggg=factor(rep(1:3, c(length(e_dist_1),length(e_dist_2),length(e_dist_3)))))
ggplot(df, aes(x, colour = ggg)) +
stat_ecdf()+
scale_colour_hue(name="", labels=c('N=4','N=5', 'N=6')) +
ylab("ecdf") +
xlab("quantile of winning price / reserve price")+
ggtitle("ECDF Across Different Number of Bidders")
